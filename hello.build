<?xml version="1.0" encoding="utf-8" ?>
<project name="JenkinsfileLab" default="build">
  <property name="project.version" value="1.0" />
  <property name="project.config" value="release" />
    <property name="fullpathoffile" value="C:\Program Files (x86)\Jenkins\workspace\dec25\JenkinsfileLab.sln" />
     <property name="src.dir" value="C:\Program Files (x86)\Jenkins\workspace\dec25" />
   <property name="build.dir" value="bin" />
   <property name="solution.config" value="debug" />
   <property name="build.server.dir" value="..." />
   <property name="3rd.party.lib.dir" value="..." />
    <property name="filename" value="JenkinsfileLab.sln" />
    <property name="madetodel" value="madetodel" />
    
    <target name="build" depends="debug,init,methodTest7,methodTest6,methodTest5,methodTest4,methodTest3,methodTest2,methodTest1" description="compiles the source code">
    <property name="build.dir" value="${project::get-base-directory()}/${project::get-name() }_${project.version}${basedir.suffix}"/>
    <mkdir dir="${build.dir}" />
    <csc target="exe" output=C:\Users\karthik.holikatti\Documents\visual studio 2015\Projects\GroovyHelloWorld\GroovyHelloWorld\Program.cs">
      <sources>
        <include name="C:\Users\karthik.holikatti\Documents\visual studio 2015\Projects\GroovyHelloWorld\GroovyHelloWorld\Program.cs" />
      </sources>
    </csc>
	<mail
    from="karthik.hkt26@gmail.com"
    tolist="Rajesh.Krishnamurthy@oneadvanced.com;Karthik.Holikatti@oneadvanced.com"
    subject="Sample Email"
    mailhost="smtp.gmail.com"
    mailport="587"
    ssl="true"
    user="karthik.hkt26@gmail.com"
    password="fakeomanniee511"
    message="Email from NAnt" />
    <echo>init build</echo>
   
  </target>
    <target name="methodTest1">
    <script language="C#">
    <code>
    <![CDATA[
          public static void ScriptMain(Project project)
          {
                Console.WriteLine("Hello World (from code)");
          }      
    ]]>
    </code>
    </script>
 </target>
     <target name="methodTest2">
    <script language="C#">
          <code>
            <![CDATA[
            public static void script(Project project) 
            {
                
                    Console.WriteLine("hello from console{0}");
                
            }
            ]]>
   </code>
   </script>
</target>
<target name="methodTest4">
    <script language="C#">
          <code>
            <![CDATA[
            public static void Script(Project project) 
            {
                
                    Console.WriteLine("hello from console{0}");
                
            }
            ]]>
   </code>
   </script>
</target>
<target name="methodTest3">
    <script language="C#">
          <code>
            <![CDATA[
            public static void Scriptmm(Project project) 
            {
                
                    Console.WriteLine("hello from console{0}");
                
            }
            ]]>
   </code>
   </script>
</target>
<target name="methodTest5">
    <script language="C#">
          <code>
            <![CDATA[
            public static void Scriptmm() 
            {
                
                    Console.WriteLine("hello from console{0}");
                
            }
            ]]>
   </code>
   </script>
</target>
<target name="methodTest6">
    <script language="C#">
          <code>
            <![CDATA[
            public static void Script() 
            {
                
                    Console.WriteLine("hello from console{0}");
                
            }
            ]]>
   </code>
   </script>
</target>
<target name="methodTest7">
    <script language="C#">
          <code>
            <![CDATA[
            public static void ScriptMain(Project project) 
            {
   
                    Console.WriteLine("hello from console ${filename}");
                     Console.WriteLine("${filename}");
                
            }
            ]]>
   </code>
   </script>
</target>
<target name="Propertynames">
<script language="C#" prefix="util" >
        <code>
            <![CDATA[
            public static void ScriptMain(Project project) 
            {
            /*  foreach (DictionaryEntry entry in project.Properties)
                {
                    Console.WriteLine("{0}={1}", entry.Key, entry.Value);
                } */
				string a=project.Properties["madetodel"];
				 Console.WriteLine("madetodel="+ a);
            }
            ]]>
        </code>
	</script>
	</target>


  <target name="init">
   <echo>init</echo>
    <if test="${file::exists (madetodel)}"/>
    <delete file="madetodel"/>
   <if test="${not file::exists (madetodel)}"/>
   <mkdir dir="madetodel" />
   <choose>
    <when test="${not file::exists (fullpathoffile)}">
		<echo>whennot Build release configuration</echo>
    </when>
    <otherwise>
        WHENBuild configuration  is not supported!
    </otherwise>
</choose>
    <call target="${project.config}" />
    
  </target>
  <if test="${not file::exists (fullpathoffile) or file::get-length (fullpathoffile) == 0}">
    <echo message="The version file ${filename} doesn't exist or is empty!" />
</if>
<if test="${file::exists (fullpathoffile)}">
    <echo>Build release configuration</echo>
     <echo>not Build release configuration</echo>
     </if>
     <if test="${file::exists (src.dir+'\'+filename) }"/>
    <echo>new way of path</echo>
  <target name="debug">
   <echo>debug</echo>
    <property name="project.config" value="debug" />
    <property name="build.debug" value="true" />
    <property name="basedir.suffix" value="-debug" />
  </target>

  <target name="release">
   <echo>release</echo>
    <property name="project.config" value="release" />
    <property name="build.debug" value="false" />
    <property name="basedir.suffix" value="-release" />
  </target> 
</project>
